<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.lw666.mapper.CourseMapper">
    <resultMap id="BaseResultMap" type="club.lw666.domain.Course">

        <id property="couId" column="cou_id"/>
        <result property="couName" column="cou_name"/>
        <result property="couOpenDate" column="cou_open_date"/>
        <result property="couContent" column="cou_content"/>
        <result property="proId" column="pro_id"/>

        <association property="teacher" javaType="Teacher">
            <id column="tea_id" property="teaId" jdbcType="BIGINT"/>
            <result column="tea_name" property="teaName" jdbcType="VARCHAR"/>
            <result column="tea_sex" property="teaSex" jdbcType="BIT"/>
            <result column="tea_age" property="teaAge" jdbcType="DATE"/>
            <result column="tea_enrol" property="teaEnrol" jdbcType="DATE"/>
            <result column="tea_phone" property="teaPhone" jdbcType="VARCHAR"/>
            <result column="tea_site" property="teaSite" jdbcType="VARCHAR"/>
        </association>
        <association property="profession" javaType="Profession">
            <id column="pro_id" property="proId" jdbcType="BIGINT"/>
            <result column="pro_name" property="proName" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <!--添加课程-->
    <insert id="addCourse">
        insert into course
        (cou_id,cou_name,cou_open_date,cou_content,pro_id)
        values
        (#{couId},#{couName},#{couOpenDate},#{couContent},#{profession.proId})
    </insert>
    <!--在根据couid 建立和班级的关系-->
    <insert id="saveClaAndCouByWidCouId">
        insert into clas_cou_rel (cla_id,cou_id) value (#{clzId},#{couId})
    </insert>
    <!--编辑课程-->
    <update id="editCourse">
       update course set
        cou_name = #{couName},
        cou_open_date = #{couOpenDate},
        cou_content = #{couContent},
        pro_id = #{profession.proId}
        where cou_id = #{couId}
    </update>

    <!--根据班级id 删除所有的课程-->
    <delete id="delCourseWidthByClsId">
        delete from clas_cou_rel  where cla_id = #{id}
    </delete>

    <!--根据课程id 删除课程-->
    <delete id="delCourse">
       delete from course where cou_id = #{id}
    </delete>

    <!--根据课程id 解除与班级课程的关系-->
    <delete id="delCourseWidthByCouId">
            delete from clas_cou_rel  where cou_id = #{id}
    </delete>

    <!--根据couId 先删除关系-->
    <delete id="delClaAndCouByWidCouId">
      delete from clas_cou_rel where cou_id = #{couId};
    </delete>

    <!--根据班级id 获取课程-->
    <select id="getClassCourseById" resultMap="BaseResultMap">
        select
        c.cou_name,
        c.cou_open_date,
        c.cou_content,
        t.tea_name,
        p.pro_name
        from clas_cou_rel as cc left join course as c on cc.cou_id = c.cou_id
        left join teacher as t on cc.tea_id = t.tea_id left join profession as p
        on c.pro_id = p.pro_id
        <where>
            <if test="id!=-1">
                cc.cla_id = #{id}
            </if>
        </where>
    </select>

    <!--获取所有的课程  进行分页-->
    <select id="getCourses" resultMap="BaseResultMap">
        select
        c.cou_id,
        c.cou_name,
        c.cou_open_date,
        c.cou_content,
        p.pro_id,
        p.pro_name
        from course as c left join profession as p on c.pro_id = p.pro_id
        <where>
            <if test="keyword != null">
                c.cou_name like concat("%",#{keyword},"%")
            </if>
        </where>
        order by c.cou_id desc
    </select>
    <select id="getCourseWidthByClsId" resultMap="BaseResultMap">
        select * from course
        <where>
            <if test="claId != null">
                cou_id in (select cou_id from clas_cou_rel where cla_id = #{claId})
            </if>
        </where>
    </select>
    <!--根据老师的id查询课程 并且进行分页-->
    <select id="getCourseWidthTeaId" resultMap="BaseResultMap">
        select c.cou_name,c.cou_open_date,c.cou_content,p.pro_name
        from course as c left join profession as p on c.pro_id = p.pro_id
        <where>
            <if test="id!=0">
                cou_id in (select cc.cou_id from clas_cou_rel as cc where cc.tea_id = #{id})
            </if>
        </where>

    </select>
</mapper>