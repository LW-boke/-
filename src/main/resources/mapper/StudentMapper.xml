<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.lw666.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="club.lw666.domain.Student">
        <id column="stu_id" property="stuId" jdbcType="BIGINT"/>
        <result column="stu_name" property="stuName" jdbcType="VARCHAR"/>
        <result column="stu_sex" property="stuSex" jdbcType="BIT"/>
        <result column="stu_age" property="stuAge" jdbcType="DATE"/>
        <result column="stu_enrol" property="stuEnrol" jdbcType="DATE"/>
        <result column="stu_phone" property="stuPhone" jdbcType="VARCHAR"/>
        <result column="stu_site" property="stuSite" jdbcType="VARCHAR"/>
        <result column="stu_progress" property="stuProgress" jdbcType="BIT"/>
        <association property="profession" javaType="Profession">
            <id column="pro_id" property="proId" jdbcType="BIGINT"/>
            <result column="pro_name" property="proName" jdbcType="VARCHAR"/>
        </association>
        <association property="clazz" javaType="Clazz">
            <id column="cla_id" property="claId" jdbcType="BIGINT"/>
            <result column="cla_name" property="claName" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where stu_id = #{stuId}
  </delete>
    <insert id="insert" parameterType="club.lw666.domain.Student">
    insert into student (stu_id, stu_name, stu_sex,
      stu_age, stu_enrol, stu_phone,
      stu_site, stu_progress, stu_pro,
      stu_clas)
    values (#{stuId,jdbcType=BIGINT}, #{stuName,jdbcType=VARCHAR}, #{stuSex,jdbcType=BIT},
      #{stuAge,jdbcType=DATE}, #{stuEnrol,jdbcType=DATE}, #{stuPhone,jdbcType=VARCHAR},
      #{stuSite,jdbcType=VARCHAR}, #{stuProgress,jdbcType=BIT}, #{profession.proId},
      #{clazz.claId})
  </insert>

    <update id="updateByPrimaryKey" parameterType="club.lw666.domain.Student">
    update student
    set stu_name = #{stuName,jdbcType=VARCHAR},
      stu_sex = #{stuSex,jdbcType=BIT},
      stu_age = #{stuAge,jdbcType=DATE},
      stu_enrol = #{stuEnrol,jdbcType=DATE},
      stu_phone = #{stuPhone,jdbcType=VARCHAR},
      stu_site = #{stuSite,jdbcType=VARCHAR},
      stu_progress = #{stuProgress,jdbcType=BIT},
      stu_pro = #{profession.proId},
      stu_clas = #{clazz.claId}
    where stu_id = #{stuId,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select stu_id, stu_name, stu_sex, stu_age, stu_enrol, stu_phone, stu_site, stu_progress,
    stu_pro, stu_clas
    from student
    where stu_id = #{stuId,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        s.stu_id,
        s.stu_name,
        s.stu_sex,
        s.stu_age,
        s.stu_enrol,
        s.stu_phone,
        s.stu_site,
        s.stu_progress,
        p.pro_id,
        p.pro_name,
        c.cla_id,
        c.cla_name
        from student as s
        left join profession as p on s.stu_pro = p.pro_id
        left join clazz as c on s.stu_clas = c.cla_id
  </select>
    <!--根据班级的id查询学生-->
    <select id="getStudentByClsId" resultMap="BaseResultMap">
      select stu_name,stu_sex,stu_age,stu_phone,stu_enrol from student where stu_clas = #{id}
    </select>

    <select id="getStudentByClsNum" resultType="Integer">
        select count(stu_id) as refNumber from student where stu_clas = #{id}
    </select>
    <!--获取所有的学生 进行分页-->
    <select id="getStudents" resultMap="BaseResultMap">
        select
        s.stu_id,
        s.stu_name,
        s.stu_sex,
        s.stu_age,
        s.stu_enrol,
        s.stu_phone,
        s.stu_site,
        s.stu_progress,
        p.pro_id,
        p.pro_name,
        c.cla_id,
        c.cla_name
        from student as s
        left join profession as p on s.stu_pro = p.pro_id
        left join clazz as c on s.stu_clas = c.cla_id
        <where>
            <if test="keyword != null and keyword != '' ">
                s.stu_name like concat("%",#{keyword},"%")
            </if>
            <if test="id != null and id != 0">
                and c.gra_num = #{id}
            </if>
        </where>
        order by s.stu_id desc
    </select>
</mapper>
